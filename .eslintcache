[{"C:\\Users\\merva\\Documents\\EC\\Webbutveckling i CMS\\music-on-app\\src\\index.js":"1","C:\\Users\\merva\\Documents\\EC\\Webbutveckling i CMS\\music-on-app\\src\\App.js":"2","C:\\Users\\merva\\Documents\\EC\\Webbutveckling i CMS\\music-on-app\\src\\reportWebVitals.js":"3","C:\\Users\\merva\\Documents\\EC\\Webbutveckling i CMS\\music-on-app\\src\\components\\Home\\index.js":"4","C:\\Users\\merva\\Documents\\EC\\Webbutveckling i CMS\\music-on-app\\src\\components\\Appbar\\index.js":"5","C:\\Users\\merva\\Documents\\EC\\Webbutveckling i CMS\\music-on-app\\src\\components\\Artist\\index.js":"6","C:\\Users\\merva\\Documents\\EC\\Webbutveckling i CMS\\music-on-app\\src\\components\\Home\\ArtistList.js":"7","C:\\Users\\merva\\Documents\\EC\\Webbutveckling i CMS\\music-on-app\\src\\components\\Appbar\\Search.js":"8","C:\\Users\\merva\\Documents\\EC\\Webbutveckling i CMS\\music-on-app\\src\\components\\Appbar\\Header.js":"9","C:\\Users\\merva\\Documents\\EC\\Webbutveckling i CMS\\music-on-app\\src\\components\\Appbar\\AppDrawer.js":"10","C:\\Users\\merva\\Documents\\EC\\Webbutveckling i CMS\\music-on-app\\src\\components\\Appbar\\Appbar.js":"11","C:\\Users\\merva\\Documents\\EC\\Webbutveckling i CMS\\music-on-app\\src\\components\\Favorits\\index.js":"12","C:\\Users\\merva\\Documents\\EC\\Webbutveckling i CMS\\music-on-app\\src\\components\\Favorits\\Dialog.js":"13"},{"size":799,"mtime":1609789447690,"results":"14","hashOfConfig":"15"},{"size":1079,"mtime":1609792792479,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"15"},{"size":1390,"mtime":1609856908635,"results":"18","hashOfConfig":"15"},{"size":661,"mtime":1609768073126,"results":"19","hashOfConfig":"15"},{"size":12134,"mtime":1609856359810,"results":"20","hashOfConfig":"15"},{"size":3507,"mtime":1609847570217,"results":"21","hashOfConfig":"15"},{"size":3047,"mtime":1609793055330,"results":"22","hashOfConfig":"15"},{"size":981,"mtime":1609837827115,"results":"23","hashOfConfig":"15"},{"size":4805,"mtime":1609832701521,"results":"24","hashOfConfig":"15"},{"size":1320,"mtime":1609835352254,"results":"25","hashOfConfig":"15"},{"size":1462,"mtime":1609856907717,"results":"26","hashOfConfig":"15"},{"size":410,"mtime":1609855550773,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"d00893",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\merva\\Documents\\EC\\Webbutveckling i CMS\\music-on-app\\src\\index.js",[],["59","60"],"C:\\Users\\merva\\Documents\\EC\\Webbutveckling i CMS\\music-on-app\\src\\App.js",[],"C:\\Users\\merva\\Documents\\EC\\Webbutveckling i CMS\\music-on-app\\src\\reportWebVitals.js",[],"C:\\Users\\merva\\Documents\\EC\\Webbutveckling i CMS\\music-on-app\\src\\components\\Home\\index.js",[],"C:\\Users\\merva\\Documents\\EC\\Webbutveckling i CMS\\music-on-app\\src\\components\\Appbar\\index.js",["61","62","63","64","65","66"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { AppBar, Toolbar, IconButton } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AppDrawer from './AppDrawer';\r\nimport Appbar from './Appbar';\r\n\r\n\r\nconst AppbarDrawer = ({open, handleDrawerOpen, handleDrawerClose}) => {\r\n\r\n  return (\r\n    <div>\r\n      <Appbar open={open} handleDrawerOpen={handleDrawerOpen} handleDrawerClose = {handleDrawerClose}/>\r\n      <AppDrawer open={open} handleDrawerOpen={handleDrawerOpen} handleDrawerClose={handleDrawerClose} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AppbarDrawer;\r\n","C:\\Users\\merva\\Documents\\EC\\Webbutveckling i CMS\\music-on-app\\src\\components\\Artist\\index.js",["67","68"],"C:\\Users\\merva\\Documents\\EC\\Webbutveckling i CMS\\music-on-app\\src\\components\\Home\\ArtistList.js",["69","70","71","72","73"],"import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid } from '@material-ui/core';\r\nimport { List, ListItem, ListItemAvatar, Avatar, ListItemText, Checkbox, FormControlLabel } from '@material-ui/core';\r\nimport { Favorite, FavoriteBorder } from '@material-ui/icons';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    toolbar: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"flex-end\",\r\n        paddingLeft: \"90px\",\r\n        padding: theme.spacing(0, 1),\r\n        ...theme.mixins.toolbar\r\n    },\r\n    grid: {\r\n        padding: '50px',\r\n        marginLeft: '200px',\r\n        marginRight: '200px'\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        paddingTop: '0px',\r\n        paddingBottom: '25px',\r\n        boxShadow: \"0px 1px 6px 0px rgba(0,0,0,0.7)\",\r\n        [theme.breakpoints.down(\"xs\")]: {\r\n            boxShadow: \"none\",\r\n        },\r\n    },\r\n    listItemHeader: {\r\n        background: \"rgb(230, 230, 230)\",\r\n        color: \"rgb(128, 128, 128)\",\r\n        padding: \"4px 12px\",\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            paddingLeft: \"340px\",\r\n        },\r\n    },\r\n    listItemHeaderText: {\r\n        transition: \"all 0.3s linear\",\r\n        maxWidth: \"40ch\",\r\n        //textAlign: 'center',\r\n        paddingLeft: '60px',\r\n        color: 'black'\r\n    },\r\n  }));\r\n\r\nexport default function ArtistList({results, open}) {\r\n    const classes = useStyles();\r\n    const [checked, setChecked] = useState([1]);\r\n\r\n\r\n        const handleToggle = (value) => () => {\r\n            const currentIndex = checked.indexOf(value);\r\n            const newChecked = [...checked];\r\n    \r\n            if(currentIndex === -1) {\r\n                newChecked.push(value);\r\n            } else  {\r\n                newChecked.splice(currentIndex, 1);\r\n            }\r\n            setChecked(newChecked);\r\n        };\r\n    \r\n        return (\r\n            <main>\r\n            <div className={classes.toolbar} />\r\n            <Grid container item xs={12} justify=\"center\">\r\n            <Grid container item xs={12} spacing={6} className = {classes.grid} >\r\n            <Grid container item xs = {12} style = {{margin: '25px'}}>\r\n            <Grid item xs = {12} lg>\r\n            <List dense className = {classes.root}>\r\n                <ListItem dense className = {classes.listItemHeader}>\r\n                    <ListItemText className = {classes.listItemHeaderText} \r\n                        primary = 'Artist List'/> \r\n                </ListItem>\r\n                {results.map((artist, id)  => {\r\n                    const labelId = `checkbox-list-secondary-label-${artist.name}`;\r\n                    return (\r\n                        <ListItem key = {id} button component = {Link} to ={`/artist/${artist.slug}`} style = {{marginTop: '25px', marginBottom: '25px', paddingLeft: '60px' }}>\r\n                            <ListItemAvatar>\r\n                                <Avatar \r\n                                    alt={artist + 1}\r\n                                    src={artist.artistImage.url}\r\n                                  />\r\n                            </ListItemAvatar>\r\n                            <ListItemText id = {labelId} primary = {artist.name}/>\r\n                        </ListItem>\r\n                    )\r\n                })}\r\n            </List>\r\n            </Grid>\r\n            </Grid>\r\n            </Grid>\r\n            </Grid>\r\n            </main>\r\n        );\r\n}\r\n\r\n","C:\\Users\\merva\\Documents\\EC\\Webbutveckling i CMS\\music-on-app\\src\\components\\Appbar\\Search.js",["74"],"import React, { useEffect, useState } from 'react';\r\nimport { useLazyQuery, gql} from '@apollo/client';\r\nimport { InputBase } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  search: {\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n      marginLeft: theme.spacing(3),\r\n      width: 'auto',\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    color: '#e7e7de'\r\n  },\r\n  inputRoot: {\r\n    color: 'inherit',\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create('width'),\r\n    width: '100%',\r\n    [theme.breakpoints.up('md')]: {\r\n      width: '20ch',\r\n    },\r\n  },\r\n}));\r\n \r\nconst Search = ({slugs}) => {\r\n    const classes = useStyles();\r\n    const [getData, result] = useLazyQuery(SEARCH_DATA)\r\n    const[data, setData] = useState(null);\r\n\r\n    const showSlug =(slug) => {\r\n        getData({ variables: {slug: slug} })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(result.data) {\r\n            setData(result.data.findData)\r\n        }\r\n    }, [result])\r\n\r\n    if(data) {\r\n        console.log(data)\r\n    }\r\n\r\n    return (\r\n      <div className={classes.search}>\r\n      <div className={classes.searchIcon}>\r\n        <SearchIcon />\r\n      </div>\r\n      <InputBase\r\n        placeholder=\"Search…\"\r\n        classes={{\r\n          root: classes.inputRoot,\r\n          input: classes.inputInput,\r\n        }}\r\n        inputProps={{ 'aria-label': 'search' }}\r\n      />\r\n    </div>\r\n\r\n      )\r\n    }\r\n\r\n    const SEARCH_DATA = gql`\r\n    query findDataBySlug($slug: String!) {\r\n        findData(slug: $slug) {\r\n            id\r\n            slug\r\n            name\r\n            artistImage {\r\n              url\r\n            }\r\n             albumsSongs {\r\n                  ...on Album {\r\n                    id\r\n                    slug\r\n                    albumName\r\n                    albumImage {\r\n                      url\r\n                    }\r\n                    songs {\r\n                      id\r\n                      slug\r\n                      songTitle\r\n                    }\r\n                  }\r\n                  ...on Song {\r\n                    id\r\n                    slug\r\n                    songTitle\r\n                    songFile {\r\n                      url\r\n                    }\r\n                  }\r\n                }\r\n          }\r\n    }\r\n    `;\r\n\r\nexport default Search;","C:\\Users\\merva\\Documents\\EC\\Webbutveckling i CMS\\music-on-app\\src\\components\\Appbar\\Header.js",[],"C:\\Users\\merva\\Documents\\EC\\Webbutveckling i CMS\\music-on-app\\src\\components\\Appbar\\AppDrawer.js",["75","76","77"],"import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport clsx from \"clsx\";\r\nimport { List, ListItem, ListItemIcon, ListItemText, IconButton, Drawer, Tooltip } from '@material-ui/core';\r\nimport { Backdrop, Hidden } from \"@material-ui/core\";\r\nimport { useTheme, makeStyles } from \"@material-ui/core/styles\";\r\nimport { ChevronLeft } from \"@material-ui/icons\";\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport QueueMusic from '@material-ui/icons/QueueMusic';\r\n\r\n\r\n\r\nconst drawerWidth = 220;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n        whiteSpace: \"nowrap\",\r\n        backgroundColor: '#00587a'\r\n    },\r\n\r\n    drawerOpen: {\r\n        width: drawerWidth,\r\n        transition: theme.transitions.create(\"width\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.enteringScreen\r\n        }),\r\n        overflowX: \"hidden\"\r\n    },\r\n    drawerClose: {\r\n        transition: theme.transitions.create(\"width\", {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen\r\n        }),\r\n        overflowX: \"hidden\",\r\n        width: 0,\r\n        border: 0,\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: theme.spacing(8) + 1,\r\n        },\r\n    },\r\n    toolbar: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"flex-end\",\r\n        paddingLeft: \"90px\",\r\n        padding: theme.spacing(0, 1),\r\n        ...theme.mixins.toolbar\r\n    },\r\n    menuButton: {\r\n        marginRight: 29,\r\n    },\r\n    textWhite: {\r\n       color: '#e7e7de',\r\n    }\r\n    \r\n})) \r\n\r\nconst SideDrawer = (props) => {\r\n    const { open } = props;\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Drawer\r\n                variant=\"permanent\"\r\n                className={clsx(classes.drawer, {\r\n                    [classes.drawerOpen]: open,\r\n                    [classes.drawerClose]: !open\r\n                })}\r\n                classes={{\r\n                    paper: clsx(classes.drawer, {\r\n                        [classes.drawerOpen]: open,\r\n                        [classes.drawerClose]: !open\r\n                    })\r\n                }}\r\n            // style={{overflow:\"hidden\"}}\r\n            >\r\n                <div className={classes.toolbar} >\r\n                    {open ? <IconButton onClick={props.handleDrawerClose} className={classes.hoverEffect} >\r\n                        <ChevronLeft fontSize=\"large\" className={classes.textWhite} />\r\n                    </IconButton>\r\n                        : <IconButton\r\n                            color=\"inherit\"\r\n                            aria-label=\"open drawer\"\r\n                            onClick={props.handleDrawerOpen}\r\n                            edge=\"start\"\r\n                            className={clsx(classes.menuButton, classes.textWhite, classes.hoverEffect, {\r\n                                [classes.hide]: open\r\n                            })}\r\n                        >\r\n                            <MenuIcon fontSize=\"large\" />\r\n                        </IconButton>}\r\n                </div>\r\n\r\n                <List className={classes.textWhite} style={{ marginTop: \"40px\" }}>\r\n\r\n                    <NavLink exact activeClassName={classes.active} className=\"link\" to={\"/home\"} >\r\n                        <ListItem button className={classes.hoverEffect}>\r\n                            <Tooltip title={!open ? \"Home\" : \"\"} placement=\"right\" arrow>\r\n                                <ListItemIcon className={classes.textWhite} >\r\n                                    <HomeIcon fontSize=\"large\" />\r\n                                </ListItemIcon>\r\n                            </Tooltip>\r\n                            <ListItemText primary=\"MusicON\" className={classes.textWhite}/>\r\n                        </ListItem>\r\n                    </NavLink>\r\n\r\n                    <NavLink activeClassName={classes.active} className=\"link\" to=\"/something\">\r\n                        <ListItem button className={classes.hoverEffect}>\r\n                            <Tooltip title={!open ? \"List\" : \"\"} placement=\"right\" arrow>\r\n                                <ListItemIcon className={classes.textWhite}>\r\n                                    <QueueMusic fontSize=\"large\" />\r\n                                </ListItemIcon>\r\n                            </Tooltip>\r\n                            <ListItemText primary=\"List\" className={classes.textWhite} />\r\n                        </ListItem>\r\n                    </NavLink>\r\n\r\n                </List>\r\n            </Drawer>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default SideDrawer;\r\n","C:\\Users\\merva\\Documents\\EC\\Webbutveckling i CMS\\music-on-app\\src\\components\\Appbar\\Appbar.js",[],"C:\\Users\\merva\\Documents\\EC\\Webbutveckling i CMS\\music-on-app\\src\\components\\Favorits\\index.js",[],"C:\\Users\\merva\\Documents\\EC\\Webbutveckling i CMS\\music-on-app\\src\\components\\Favorits\\Dialog.js",["78"],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":2,"column":8,"nodeType":"85","messageId":"86","endLine":2,"endColumn":12},{"ruleId":"83","severity":1,"message":"87","line":3,"column":10,"nodeType":"85","messageId":"86","endLine":3,"endColumn":20},{"ruleId":"83","severity":1,"message":"88","line":4,"column":10,"nodeType":"85","messageId":"86","endLine":4,"endColumn":16},{"ruleId":"83","severity":1,"message":"89","line":4,"column":18,"nodeType":"85","messageId":"86","endLine":4,"endColumn":25},{"ruleId":"83","severity":1,"message":"90","line":4,"column":27,"nodeType":"85","messageId":"86","endLine":4,"endColumn":37},{"ruleId":"83","severity":1,"message":"91","line":5,"column":8,"nodeType":"85","messageId":"86","endLine":5,"endColumn":16},{"ruleId":"83","severity":1,"message":"92","line":2,"column":21,"nodeType":"85","messageId":"86","endLine":2,"endColumn":25},{"ruleId":"83","severity":1,"message":"93","line":6,"column":92,"nodeType":"85","messageId":"86","endLine":6,"endColumn":99},{"ruleId":"83","severity":1,"message":"94","line":5,"column":64,"nodeType":"85","messageId":"86","endLine":5,"endColumn":72},{"ruleId":"83","severity":1,"message":"95","line":5,"column":74,"nodeType":"85","messageId":"86","endLine":5,"endColumn":90},{"ruleId":"83","severity":1,"message":"96","line":6,"column":10,"nodeType":"85","messageId":"86","endLine":6,"endColumn":18},{"ruleId":"83","severity":1,"message":"97","line":6,"column":20,"nodeType":"85","messageId":"86","endLine":6,"endColumn":34},{"ruleId":"83","severity":1,"message":"98","line":54,"column":15,"nodeType":"85","messageId":"86","endLine":54,"endColumn":27},{"ruleId":"83","severity":1,"message":"99","line":53,"column":11,"nodeType":"85","messageId":"86","endLine":53,"endColumn":19},{"ruleId":"83","severity":1,"message":"100","line":5,"column":10,"nodeType":"85","messageId":"86","endLine":5,"endColumn":18},{"ruleId":"83","severity":1,"message":"101","line":5,"column":20,"nodeType":"85","messageId":"86","endLine":5,"endColumn":26},{"ruleId":"83","severity":1,"message":"102","line":6,"column":10,"nodeType":"85","messageId":"86","endLine":6,"endColumn":18},{"ruleId":"83","severity":1,"message":"103","line":2,"column":30,"nodeType":"85","messageId":"86","endLine":2,"endColumn":43},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"no-unused-vars","'clsx' is defined but never used.","Identifier","unusedVar","'makeStyles' is defined but never used.","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'IconButton' is defined but never used.","'MenuIcon' is defined but never used.","'Link' is defined but never used.","'Divider' is defined but never used.","'Checkbox' is defined but never used.","'FormControlLabel' is defined but never used.","'Favorite' is defined but never used.","'FavoriteBorder' is defined but never used.","'handleToggle' is assigned a value but never used.","'showSlug' is assigned a value but never used.","'Backdrop' is defined but never used.","'Hidden' is defined but never used.","'useTheme' is defined but never used.","'DialogContent' is defined but never used.","no-global-assign","no-unsafe-negation"]