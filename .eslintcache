[{"C:\\Users\\merva\\Documents\\EC\\Webbutveckling i CMS\\music-on-app\\src\\index.js":"1","C:\\Users\\merva\\Documents\\EC\\Webbutveckling i CMS\\music-on-app\\src\\App.js":"2","C:\\Users\\merva\\Documents\\EC\\Webbutveckling i CMS\\music-on-app\\src\\reportWebVitals.js":"3","C:\\Users\\merva\\Documents\\EC\\Webbutveckling i CMS\\music-on-app\\src\\components\\Home\\index.js":"4","C:\\Users\\merva\\Documents\\EC\\Webbutveckling i CMS\\music-on-app\\src\\components\\Appbar\\index.js":"5","C:\\Users\\merva\\Documents\\EC\\Webbutveckling i CMS\\music-on-app\\src\\components\\Artist\\index.js":"6","C:\\Users\\merva\\Documents\\EC\\Webbutveckling i CMS\\music-on-app\\src\\components\\Home\\ArtistList.js":"7","C:\\Users\\merva\\Documents\\EC\\Webbutveckling i CMS\\music-on-app\\src\\components\\Appbar\\Header.js":"8","C:\\Users\\merva\\Documents\\EC\\Webbutveckling i CMS\\music-on-app\\src\\components\\Appbar\\AppDrawer.js":"9","C:\\Users\\merva\\Documents\\EC\\Webbutveckling i CMS\\music-on-app\\src\\components\\Appbar\\Appbar.js":"10","C:\\Users\\merva\\Documents\\EC\\Webbutveckling i CMS\\music-on-app\\src\\components\\Favorits\\index.js":"11","C:\\Users\\merva\\Documents\\EC\\Webbutveckling i CMS\\music-on-app\\src\\components\\Favorits\\Dialog.js":"12","C:\\Users\\merva\\Documents\\EC\\Webbutveckling i CMS\\music-on-app\\src\\components\\Search\\index.js":"13","C:\\Users\\merva\\Documents\\EC\\Webbutveckling i CMS\\music-on-app\\src\\components\\Search\\SearchPage.js":"14","C:\\Users\\merva\\Documents\\EC\\Webbutveckling i CMS\\music-on-app\\src\\components\\Search\\SearchData.js":"15","C:\\Users\\merva\\Documents\\EC\\Webbutveckling i CMS\\music-on-app\\src\\components\\Album\\index.js":"16","C:\\Users\\merva\\Documents\\EC\\Webbutveckling i CMS\\music-on-app\\src\\components\\Artist\\SingleArtist.js":"17","C:\\Users\\merva\\Documents\\EC\\Webbutveckling i CMS\\music-on-app\\src\\components\\Album\\SingleAlbum.js":"18","C:\\Users\\merva\\Documents\\EC\\Webbutveckling i CMS\\music-on-app\\src\\components\\Song\\index.js":"19","C:\\Users\\merva\\Documents\\EC\\Webbutveckling i CMS\\music-on-app\\src\\components\\Song\\SingleSong.js":"20"},{"size":799,"mtime":1609789447690,"results":"21","hashOfConfig":"22"},{"size":1481,"mtime":1610103764682,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"22"},{"size":1438,"mtime":1610097682794,"results":"25","hashOfConfig":"22"},{"size":464,"mtime":1609928810928,"results":"26","hashOfConfig":"22"},{"size":2605,"mtime":1610116329418,"results":"27","hashOfConfig":"22"},{"size":3107,"mtime":1610096150616,"results":"28","hashOfConfig":"22"},{"size":981,"mtime":1609837827115,"results":"29","hashOfConfig":"22"},{"size":4733,"mtime":1610105664703,"results":"30","hashOfConfig":"22"},{"size":1321,"mtime":1609940340853,"results":"31","hashOfConfig":"22"},{"size":1240,"mtime":1609933769805,"results":"32","hashOfConfig":"22"},{"size":373,"mtime":1609931258932,"results":"33","hashOfConfig":"22"},{"size":638,"mtime":1610022113488,"results":"34","hashOfConfig":"22"},{"size":205,"mtime":1610027042268,"results":"35","hashOfConfig":"22"},{"size":4652,"mtime":1610115267327,"results":"36","hashOfConfig":"22"},{"size":2062,"mtime":1610103112453,"results":"37","hashOfConfig":"22"},{"size":10944,"mtime":1610117187808,"results":"38","hashOfConfig":"22"},{"size":6125,"mtime":1610111434761,"results":"39","hashOfConfig":"22"},{"size":2046,"mtime":1610114486532,"results":"40","hashOfConfig":"22"},{"size":6280,"mtime":1610116208829,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"d00893",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\merva\\Documents\\EC\\Webbutveckling i CMS\\music-on-app\\src\\index.js",[],["86","87"],"C:\\Users\\merva\\Documents\\EC\\Webbutveckling i CMS\\music-on-app\\src\\App.js",[],"C:\\Users\\merva\\Documents\\EC\\Webbutveckling i CMS\\music-on-app\\src\\reportWebVitals.js",[],"C:\\Users\\merva\\Documents\\EC\\Webbutveckling i CMS\\music-on-app\\src\\components\\Home\\index.js",[],"C:\\Users\\merva\\Documents\\EC\\Webbutveckling i CMS\\music-on-app\\src\\components\\Appbar\\index.js",[],"C:\\Users\\merva\\Documents\\EC\\Webbutveckling i CMS\\music-on-app\\src\\components\\Artist\\index.js",["88"],"C:\\Users\\merva\\Documents\\EC\\Webbutveckling i CMS\\music-on-app\\src\\components\\Home\\ArtistList.js",["89","90","91","92","93"],"import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid } from '@material-ui/core';\r\nimport { List, ListItem, ListItemAvatar, Avatar, ListItemText, Checkbox, FormControlLabel } from '@material-ui/core';\r\nimport { Favorite, FavoriteBorder } from '@material-ui/icons';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    toolbar: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"flex-end\",\r\n        paddingLeft: \"90px\",\r\n        padding: theme.spacing(0, 1),\r\n        ...theme.mixins.toolbar\r\n    },\r\n    grid: {\r\n        padding: '50px',\r\n        marginLeft: '200px',\r\n        marginRight: '200px'\r\n    },\r\n    root: {\r\n        flexGrow: 1,\r\n        paddingTop: '0px',\r\n        paddingBottom: '25px',\r\n        boxShadow: \"0px 1px 6px 0px rgba(0,0,0,0.7)\",\r\n        [theme.breakpoints.down(\"xs\")]: {\r\n            boxShadow: \"none\",\r\n        },\r\n    },\r\n    listItemHeader: {\r\n        background: \"rgb(230, 230, 230)\",\r\n        color: \"rgb(128, 128, 128)\",\r\n        padding: \"4px 12px\",\r\n        [theme.breakpoints.up(\"md\")]: {\r\n            paddingLeft: \"340px\",\r\n        },\r\n    },\r\n    listItemHeaderText: {\r\n        transition: \"all 0.3s linear\",\r\n        maxWidth: \"40ch\",\r\n        //textAlign: 'center',\r\n        paddingLeft: '60px',\r\n        color: 'black'\r\n    },\r\n  }));\r\n\r\nexport default function ArtistList({results, open}) {\r\n    const classes = useStyles();\r\n    console.log(results);\r\n    \r\n        return (\r\n            <main>\r\n          <div className={classes.toolbar} />\r\n            <Grid container item xs={12} justify=\"center\">\r\n            <Grid container item xs={12} spacing={6} className = {classes.grid} >\r\n            <Grid container item xs = {12} style = {{margin: '25px'}}>\r\n            <Grid item xs = {12} lg>\r\n            <List dense className = {classes.root}>\r\n                <ListItem dense className = {classes.listItemHeader}>\r\n                    <ListItemText className = {classes.listItemHeaderText} \r\n                        primary = 'Artist List'/> \r\n                </ListItem>\r\n                {results.artists.map((artist, id)  => {\r\n                    const labelId = `checkbox-list-secondary-label-${artist.name}`;\r\n                    return (\r\n                        <ListItem key = {id} button component = {Link} to ={`/artist/${artist.slug}`} style = {{marginTop: '25px', marginBottom: '25px', paddingLeft: '60px' }}>\r\n                            <ListItemAvatar>\r\n                                <Avatar \r\n                                    alt={artist + 1}\r\n                                    src={artist.artistImage.url}\r\n                                  />\r\n                            </ListItemAvatar>\r\n                            <ListItemText id = {labelId} primary = {artist.name}/>\r\n                        </ListItem>\r\n                    )\r\n                })}\r\n            </List>\r\n            </Grid>\r\n            </Grid>\r\n            </Grid>\r\n            </Grid>\r\n            </main>\r\n        );\r\n}\r\n\r\n","C:\\Users\\merva\\Documents\\EC\\Webbutveckling i CMS\\music-on-app\\src\\components\\Appbar\\Header.js",[],"C:\\Users\\merva\\Documents\\EC\\Webbutveckling i CMS\\music-on-app\\src\\components\\Appbar\\AppDrawer.js",[],"C:\\Users\\merva\\Documents\\EC\\Webbutveckling i CMS\\music-on-app\\src\\components\\Appbar\\Appbar.js",[],"C:\\Users\\merva\\Documents\\EC\\Webbutveckling i CMS\\music-on-app\\src\\components\\Favorits\\index.js",["94"],"import React from 'react';\r\nimport { useQuery, gql } from '@apollo/client';\r\nimport DialogFavorit from './Dialog';\r\n\r\nconst SelectedFavorit =({selected, dialogOpen}) => {\r\n  console.log(selected);\r\n    const {loading, error, data} = useQuery(\r\n        GET_CHOOSEN_DATA, {\r\n            variables: {id: selected}\r\n        }\r\n    );\r\n\r\n\r\n    if(loading)\r\n        return <p>Loading artist...</p>\r\n    if(error)\r\n        return <p>Error...</p>\r\n    if(data !== null) {\r\n        console.log(data);\r\n    }\r\n    \r\n    return(\r\n      <div></div>\r\n        //<DialogFavorit selected = {selected} dialogOpen = {dialogOpen} />\r\n        )\r\n}\r\n\r\nexport default SelectedFavorit;\r\n\r\nconst GET_CHOOSEN_DATA =  gql`\r\nquery GetChoosenData($id : ID!) {\r\n    artists(where: {id: $id} ){\r\n        ...on Artist {\r\n          id\r\n          slug\r\n          name\r\n          artistImage {\r\n            url\r\n          }\r\n        }\r\n    }\r\n    albums(where: {id: $id} ) {\r\n      ...on Album {\r\n        id\r\n        slug\r\n        albumName\r\n        albumImage {\r\n          url\r\n        }\r\n      }\r\n    }\r\n    songs(where: {id: $id} ) {\r\n      ...on Song {\r\n        id\r\n        slug\r\n        songTitle\r\n        songFile {\r\n          url\r\n        }\r\n      }\r\n    }\r\n}\r\n`;\r\n\r\n","C:\\Users\\merva\\Documents\\EC\\Webbutveckling i CMS\\music-on-app\\src\\components\\Favorits\\Dialog.js",[],"C:\\Users\\merva\\Documents\\EC\\Webbutveckling i CMS\\music-on-app\\src\\components\\Search\\index.js",[],"C:\\Users\\merva\\Documents\\EC\\Webbutveckling i CMS\\music-on-app\\src\\components\\Search\\SearchPage.js",[],"C:\\Users\\merva\\Documents\\EC\\Webbutveckling i CMS\\music-on-app\\src\\components\\Search\\SearchData.js",["95","96","97","98","99"],"C:\\Users\\merva\\Documents\\EC\\Webbutveckling i CMS\\music-on-app\\src\\components\\Album\\index.js",["100"],"import React, {useState, useEffect} from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport { gql, useQuery } from '@apollo/client';\r\nimport SingleAlbum from './SingleAlbum';\r\n\r\n\r\n  \r\nexport default function Album() {\r\n    const [results, setResults] = useState([]);\r\n    const [selected, setSelected] = useState([]);\r\n    const [dialogOpen, setDialogOpen] = useState(false);\r\n    const {slug} = useParams();\r\n    const { loading, error, data} = useQuery(\r\n        GET_SINGLE_ALBUM, {\r\n            variables: {slug: slug}\r\n        }\r\n    );\r\n\r\n    useEffect(() => {\r\n        getData();\r\n    })\r\n\r\n    const handleSelected =(e, key) => {\r\n        //console.log(key);\r\n        let tempSelect = {...selected};\r\n        tempSelect = e.target.value;\r\n        //console.log( typeof tempSelect);\r\n        setSelected(tempSelect);\r\n        setDialogOpen(true);  \r\n    }\r\n\r\n    const getData = () => {\r\n        if(error)\r\n            return <p>Error...</p>\r\n        if(data) {\r\n            return setResults(data);\r\n          \r\n        }\r\n    }\r\n\r\n    console.log(results);\r\n    \r\n    \r\n     /*   const handleToggle = (e) => () => {\r\n            console.log(e.target.value);\r\n            setChecked(e.target.value);\r\n            \r\n        };*/\r\n    \r\n    return (\r\n        <div>\r\n            {loading || results.length === 0 ? \r\n                <h1>Loading Album...</h1> \r\n              :  <SingleAlbum \r\n                results = {results} \r\n                selected = {selected}\r\n                dialogOpen ={dialogOpen} \r\n                handleSelected = {handleSelected}/>\r\n            }\r\n        </div>\r\n       \r\n    )\r\n}\r\n    \r\n\r\nconst GET_SINGLE_ALBUM = gql`\r\nquery SingleAlbum($slug: String!) {\r\n    album(where: {slug: $slug}) {\r\n        id\r\n        slug\r\n        albumName\r\n        albumImage {\r\n          url\r\n        }\r\n        songs {\r\n            ...on Song {\r\n                id\r\n                slug\r\n                songTitle\r\n                songFile {\r\n                  url\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n`;","C:\\Users\\merva\\Documents\\EC\\Webbutveckling i CMS\\music-on-app\\src\\components\\Artist\\SingleArtist.js",[],"C:\\Users\\merva\\Documents\\EC\\Webbutveckling i CMS\\music-on-app\\src\\components\\Album\\SingleAlbum.js",[],"C:\\Users\\merva\\Documents\\EC\\Webbutveckling i CMS\\music-on-app\\src\\components\\Song\\index.js",["101"],"C:\\Users\\merva\\Documents\\EC\\Webbutveckling i CMS\\music-on-app\\src\\components\\Song\\SingleSong.js",["102"],{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":2,"column":21,"nodeType":"109","messageId":"110","endLine":2,"endColumn":25},{"ruleId":"107","severity":1,"message":"111","line":1,"column":17,"nodeType":"109","messageId":"110","endLine":1,"endColumn":25},{"ruleId":"107","severity":1,"message":"112","line":5,"column":64,"nodeType":"109","messageId":"110","endLine":5,"endColumn":72},{"ruleId":"107","severity":1,"message":"113","line":5,"column":74,"nodeType":"109","messageId":"110","endLine":5,"endColumn":90},{"ruleId":"107","severity":1,"message":"114","line":6,"column":10,"nodeType":"109","messageId":"110","endLine":6,"endColumn":18},{"ruleId":"107","severity":1,"message":"115","line":6,"column":20,"nodeType":"109","messageId":"110","endLine":6,"endColumn":34},{"ruleId":"107","severity":1,"message":"116","line":3,"column":8,"nodeType":"109","messageId":"110","endLine":3,"endColumn":21},{"ruleId":"107","severity":1,"message":"117","line":3,"column":10,"nodeType":"109","messageId":"110","endLine":3,"endColumn":14},{"ruleId":"107","severity":1,"message":"118","line":7,"column":8,"nodeType":"109","messageId":"110","endLine":7,"endColumn":18},{"ruleId":"107","severity":1,"message":"119","line":54,"column":12,"nodeType":"109","messageId":"110","endLine":54,"endColumn":20},{"ruleId":"107","severity":1,"message":"120","line":54,"column":22,"nodeType":"109","messageId":"110","endLine":54,"endColumn":33},{"ruleId":"121","severity":1,"message":"122","line":69,"column":8,"nodeType":"123","endLine":69,"endColumn":14,"suggestions":"124"},{"ruleId":"107","severity":1,"message":"108","line":2,"column":21,"nodeType":"109","messageId":"110","endLine":2,"endColumn":25},{"ruleId":"107","severity":1,"message":"108","line":2,"column":21,"nodeType":"109","messageId":"110","endLine":2,"endColumn":25},{"ruleId":"107","severity":1,"message":"108","line":2,"column":10,"nodeType":"109","messageId":"110","endLine":2,"endColumn":14},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Checkbox' is defined but never used.","'FormControlLabel' is defined but never used.","'Favorite' is defined but never used.","'FavoriteBorder' is defined but never used.","'DialogFavorit' is defined but never used.","'Form' is defined but never used.","'SearchPage' is defined but never used.","'redirect' is assigned a value but never used.","'setRedirect' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'error'. Either include it or remove the dependency array.","ArrayExpression",["127"],"no-global-assign","no-unsafe-negation",{"desc":"128","fix":"129"},"Update the dependencies array to be: [data, error]",{"range":"130","text":"131"},[2084,2090],"[data, error]"]